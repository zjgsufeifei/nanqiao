plugins {
    id 'java'
}

group 'com.example'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    mybatisGenerator
}

dependencies {
    compile project(':nanqiao-common')
    mybatisGenerator "org.mybatis.generator:mybatis-generator-core:${generatorVersion}"
    mybatisGenerator "mysql:mysql-connector-java:${mysqlVersion}"
    mybatisGenerator "tk.mybatis:mapper:${mybatisMapperVersion}"
    implementation group: 'org.mybatis', name: 'mybatis', version: '3.5.9'
}

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/jdbc.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties;
}
task mybatisGenerate {
    doLast{
        def properties = getDbProperties()
        ant.properties['targetProject'] = projectDir.path
        ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
        ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
        ant.properties['userId'] = properties.getProperty("jdbc.username")
        ant.properties['password'] = properties.getProperty("jdbc.password")
        ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
        ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
        ant.properties['modelPackage'] = this.modelPackage
        ant.properties['mapperPackage'] = this.mapperPackage
        ant.properties['sqlMapperPackage'] = this.sqlMapperPackage
        ant.taskdef(
                name: 'mbgenerator',
                classname: 'org.mybatis.generator.ant.GeneratorAntTask',
                classpath: configurations.mybatisGenerator.asPath
        )
        ant.mbgenerator(overwrite: true,
                configfile: 'src/main/resources/mybatis-generator.xml', verbose: true) {
            propertyset {
                propertyref(name: 'targetProject')
                propertyref(name: 'userId')
                propertyref(name: 'driverClass')
                propertyref(name: 'connectionURL')
                propertyref(name: 'password')
                propertyref(name: 'src_main_java')
                propertyref(name: 'src_main_resources')
                propertyref(name: 'modelPackage')
                propertyref(name: 'mapperPackage')
                propertyref(name: 'sqlMapperPackage')
            }
        }
    }

}

test {
    useJUnitPlatform()
}